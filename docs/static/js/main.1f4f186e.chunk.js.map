{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["list_little_url","list_large_url","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadingList","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","listSize","list_url","list_data","list_page_size","_list_url","_list_data","_list_page_size","wrap","_context","prev","next","setState","items","number_of_pages","item_target","fetch","sent","json","Math","ceil","length","list_page_active","save_items","stop","_x","apply","arguments","SearchItem","_ref2","_callee2","searchText","ScreenedItems","_context2","state","filter","item","firstName","lastName","email","phone","toLowerCase","search","_x2","react_default","createElement","className","placeholder","description","address","streetAddress","city","zip","_this2","firstElem","lastElem","slice","map","key","id","onClick","_this3","page_btn","_loop","i","push","reactstrap_es","aria-label","previous","_this4","addonType","type","color","document","getElementsByTagName","value","_this5","outline","GeSearchInput","getItem","getPage","targetItem","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f4f186e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Container, Pagination, PaginationItem, PaginationLink, InputGroup, InputGroupAddon, Input } from 'reactstrap';\r\nimport './App.css';\r\n\r\nconst list_little_url = 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\nconst list_large_url = 'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: true,\r\n      list_page_active: false,\r\n      number_of_pages: false,\r\n      item_target: false,\r\n      save_items: []\r\n    };\r\n  }\r\n\r\n  loadingList = async (listSize) => {\r\n    this.setState({ items: false, number_of_pages: false, item_target: false });\r\n\r\n    if (listSize === \"little\") {\r\n      const list_url = await\r\n        fetch(list_little_url);\r\n      const list_data = await list_url.json();\r\n      const list_page_size = Math.ceil(list_data.length / 30);\r\n      this.setState({\r\n        items: list_data,\r\n        list_page_active: 1,\r\n        number_of_pages: list_page_size,\r\n        save_items: list_data\r\n      });\r\n    }\r\n\r\n    else {\r\n      const list_url = await\r\n        fetch(list_large_url);\r\n      const list_data = await list_url.json();\r\n      const list_page_size = Math.ceil(list_data.length / 30);\r\n      this.setState({\r\n        items: list_data,\r\n        list_page_active: 1,\r\n        number_of_pages: list_page_size,\r\n        save_items: list_data\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  targetItem() {\r\n\r\n    if (this.state.item_target) {\r\n      const item = this.state.item_target;\r\n      return (\r\n        <div className=\"fullInfo\">\r\n          <div>Выбран пользователь <b>{item.firstName + \" \" + item.lastName}</b></div>\r\n          <div>Описание:</div>\r\n          <textarea placeholder={item.description}></textarea>\r\n          <div>Адрес проживания: <b>{item.address.streetAddress}</b></div>\r\n          <div>Город: <b>{item.address.city}</b></div>\r\n          <div>Провинция/штат: <b>{item.address.state}</b></div>\r\n          <div>Индекс: <b>{item.address.zip}</b></div>\r\n        </div>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  getItem() {\r\n\r\n    if (this.state.items.length > 0) {\r\n      const firstElem = (this.state.list_page_active - 1) * 30;\r\n      const lastElem = firstElem + 29;\r\n      const selectionItems = this.state.items.slice(firstElem, lastElem);\r\n\r\n      return selectionItems.map((item) => {\r\n        return (\r\n          <div className=\"item_table\" key={item.id + item.firstName} onClick={(() => this.setState({ item_target: item }))}>\r\n            <div className=\"table_id\">{item.id}</div>\r\n            <div className=\"table_firstName\">{item.firstName}</div>\r\n            <div className=\"table_lastName\">{item.lastName}</div>\r\n            <div className=\"table_email\">{item.email}</div>\r\n            <div className=\"table_phone\">{item.phone}</div>\r\n          </div >\r\n        )\r\n      }\r\n      );\r\n\r\n    } if (!this.state.items) {\r\n      return (<div className=\"loading\">loading...</div>)\r\n    } else { return (<div className=\"choose\">choose a list</div>) }\r\n  }\r\n\r\n  getPage() {\r\n\r\n    if (this.state.number_of_pages > 1) {\r\n      let page_btn = []\r\n      for (let i = 0; i < this.state.number_of_pages; i++) {\r\n        page_btn.push(\r\n          <PaginationItem key={i + \"page\"} onClick={(() => this.setState({ list_page_active: i + 1 }))}>\r\n            <PaginationLink>\r\n              {i + 1}\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        )\r\n      }\r\n      return (\r\n        <Pagination aria-label=\"Page navigation example\" >\r\n          <PaginationItem onClick={(() => this.setState({ list_page_active: this.state.list_page_active - 1 }))}>\r\n            <PaginationLink previous />\r\n          </PaginationItem>\r\n          {page_btn}\r\n          <PaginationItem onClick={(() => this.setState({ list_page_active: this.state.list_page_active + 1 }))}>\r\n            <PaginationLink next />\r\n          </PaginationItem>\r\n        </Pagination>\r\n      )\r\n\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  SearchItem = async (searchText) => {\r\n    await this.setState({\r\n      items: this.state.save_items,\r\n      number_of_pages: Math.ceil(this.state.save_items.length / 30)\r\n    });\r\n    if (searchText) {\r\n      const ScreenedItems = this.state.items.filter((item) => {\r\n        let itemText = item.firstName + \" \" + item.lastName + \" \" + item.email + \" \" + item.phone;\r\n        if (itemText.toLowerCase().search(searchText.toLowerCase()) !== -1) {\r\n          return item\r\n        }\r\n      });\r\n      if (ScreenedItems.length > 0) {\r\n        this.setState({\r\n          items: ScreenedItems,\r\n          number_of_pages: Math.ceil(ScreenedItems.length / 30),\r\n          list_page_active: 1\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  GeSearchInput() {\r\n\r\n    return (\r\n      <InputGroup>\r\n        <Input placeholder=\"search\" />\r\n        <InputGroupAddon addonType=\"append\">\r\n          <Button type=\"submit\" color=\"secondary\" onClick={(() => this.SearchItem(document.getElementsByTagName(\"input\")[0].value))}>Найти</Button>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"app\">\r\n        <div className=\"button-group\">\r\n          <Button outline color=\"secondary\" onClick={(() => this.loadingList(\"little\"))}>little list</Button>\r\n          <Button outline color=\"secondary\" onClick={(() => this.loadingList(\"large\"))}>large list</Button>\r\n        </div>\r\n        {this.GeSearchInput()}\r\n        <div>\r\n          <div className=\"item_table item_table_title\">\r\n            <div className=\"table_id\">id</div>\r\n            <div className=\"table_firstName\">firstName</div>\r\n            <div className=\"table_lastName\">lastName</div>\r\n            <div className=\"table_email\">email</div>\r\n            <div className=\"table_phone\">phone</div>\r\n          </div >\r\n          {this.getItem()}\r\n\r\n        </div>\r\n        {this.getPage()}\r\n        {this.targetItem()}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}